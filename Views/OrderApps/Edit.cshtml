@model SampleAspNetCore8WithIdentityRoleBase.Models.OrderApp

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>OrderApp</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="CustomerID" class="control-label"></label>
                <select asp-for="CustomerID" class="form-control" asp-items="ViewBag.CustomerID"></select>
                <span asp-validation-for="CustomerID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductID" class="control-label"></label>
                <select asp-for="ProductID" class="form-control" asp-items="ViewBag.ProductID"></select>
                <span asp-validation-for="ProductID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PriceAll" class="control-label"></label>
                <input asp-for="PriceAll" class="form-control" />
                <span asp-validation-for="PriceAll" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CreatAt" class="control-label"></label>
                <input asp-for="CreatAt" readonly class="form-control" />
                <span asp-validation-for="CreatAt" class="text-danger" ></span>
            </div>
            <div class="form-group">
                <label asp-for="UpdateAt" class="control-label"></label>
                <input asp-for="UpdateAt" readonly class="form-control" />
                <span asp-validation-for="UpdateAt" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function calculatePriceAll() {
            var quantity = parseFloat(document.getElementById("Quantity").value) || 0;
            var price = parseFloat(document.getElementById("Price").value) || 0;
            var totalPrice = quantity * price;
            document.getElementById("PriceAll").value = totalPrice.toFixed(2);
        }

        // اعمال محاسبات زمانی که مقدار تعداد یا قیمت تغییر کند
        document.getElementById("Quantity").addEventListener("input", calculatePriceAll);
        document.getElementById("Price").addEventListener("input", calculatePriceAll);

        // دریافت و نمایش قیمت محصول به‌صورت اولیه
        function loadProductPrice(productId) {
            if (productId) {
                $.ajax({
                    url: '@Url.Action("GetProductPrice")',
                    type: 'GET',
                    data: { productId: productId },
                    success: function (data) {
                        document.getElementById("Price").value = data.toFixed(2);
                        calculatePriceAll(); // محاسبه مجدد قیمت کل
                    },
                    error: function () {
                        alert('Error retrieving product price.');
                    }
                });
            }
        }

        // دریافت قیمت محصول پیش‌فرض زمانی که صفحه بارگذاری می‌شود
        document.addEventListener("DOMContentLoaded", function () {
            var initialProductId = document.getElementById("ProductID").value;
            loadProductPrice(initialProductId); // بارگذاری قیمت محصول اولیه
        });

        // دریافت قیمت محصول هنگام تغییر محصول
        document.getElementById("ProductID").addEventListener("change", function () {
            var productId = this.value;
            loadProductPrice(productId); // بارگذاری قیمت محصول انتخاب‌شده
        });
    </script>
}
